name: Homologation Spotmusic Frontend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install dependencies Node
        run: |
          npm cache clean -f
          npm i

      # - name: Unit test
      #   run: |
      #     npm run test

      - name: build Frontend
        run: |
          npm run build

      - name: Build and Push Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME_FRONT }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME_FRONT }}/${{ vars.GOOGLE_MYAPP }}:latest

  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Auth GPC
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy
        id: deploy
        run: |
          gcloud run deploy ${{ vars.GOOGLE_MYAPP }} \
            --quiet \
            --region  ${{ vars.GOOGLE_REGION }} \
            --image ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME_FRONT }}/${{ vars.GOOGLE_MYAPP }}:latest \
            --platform managed \
            --allow-unauthenticated \
            --project ${{ vars.GOOGLE_PROJECT_ID }} \
            --format json
