name: "Frontend Pipeline"

on:
  push:
    paths:
      - 'frontend/**'
    branches: 
      - main
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install dependencies Node
        run: |
          yarn

      - name: Docker Login
        run: | 
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: | 
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME_FRONT }}/${{ vars.GOOGLE_MYAPP }}:latest ./frontend
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME_FRONT }}/${{ vars.GOOGLE_MYAPP }}:latest

  production:
    name: Production
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy - Production
        id: prod-deploy
        uses: 'google-github-actions/deploy-cloudrun@v1' 
        with:
          service: ${{ vars.GOOGLE_MYAPP }}-frontend-prod
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME_FRONT }}/${{ vars.GOOGLE_MYAPP }}:latest
          flags: '--allow-unauthenticated'

      - name: Test Prod
        run: 'curl "${{ steps.prod-deploy.outputs.url }}"'

